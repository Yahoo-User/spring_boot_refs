===============================================================
 How to make an user-defined spring boot starter
 in the Spring Boot v3.2.3 ( 2024.03.19 )
===============================================================

-------------------------------------------------------------
Step1. How To Make An User-defined Spring Boot Starter.
-------------------------------------------------------------

	(01) Create a Maven Project.
	(02) Remove `/src/test/java`, `/src/test/resources`, `/src/test` directory if exists.
	(03) Remove an startup class from `/src/main/java` directory.
	(04) Create several `org.zerock.myapp.autoconfigure.XXXAutoConfiguration` classes as needed as possible.
	(05) Create a `/src/main/resources` directory if not exists.
	(06) Create a `/src/main/resources/META-INF/spring/` directory.
	(07) Create a `/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports` file.
	(08) Write a FQCN of all user-defined (4) `XXXAutoConfiguration` classes into (7) file.
	(09) You must add the following *required* dependencies into the maven configuration `pom.xml` file:

			    <!-- This artifact should be necessary for User-defined Stater. -->
				<dependency>
				    <groupId>org.springframework.boot</groupId>
				    <artifactId>spring-boot-starter</artifactId>
				</dependency>
				
			    <!-- This artifact should be necessary to process @EnableConfigurationProperties & @ConfigurationProperties annotations. -->
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-configuration-processor</artifactId>
				</dependency>

	(10) You can add the following *optional* dependencies if needed into the maven configuration `pom.xml` file:

				<dependency>
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok</artifactId>
				</dependency>

				<dependency>
					<groupId>com.oracle.database.jdbc</groupId>
					<artifactId>ojdbc8-production</artifactId>
					<type>pom</type>

					<exclusions>
						<exclusion>
							<groupId>com.oracle.database.ha</groupId>
							<artifactId>simplefan</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.oracle.database.ha</groupId>
							<artifactId>ons</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.oracle.database.jdbc</groupId>
							<artifactId>rsi</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.oracle.database.xml</groupId>
							<artifactId>xdb</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.oracle.database.xml</groupId>
							<artifactId>xmlparserv2</artifactId>
						</exclusion>
					</exclusions>
				</dependency>

	(11) You can manage versions of all <dependency> of <dependencies> in the maven configuration `pom.xml` file
			With `<dependencyManagement>` tag like the following:

				<dependencyManagement>
					<dependencies>
						<!-- 1. required -->
						<dependency>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-dependencies</artifactId>		<--- ***
							<version>${spring.boot.version}</version>
							<type>pom</type>															<--- ***: The configuration of this artifact
							<scope>import</scope> 												<--- ***: Inheritance
						</dependency>
		
						<!-- 2. optional for oracle jdbc driver -->
						<dependency>
							<groupId>com.oracle.database.jdbc</groupId>
							<artifactId>ojdbc-bom</artifactId> 								<--- ***
							<version>21.13.0.0</version>
							<type>pom</type> 														<--- ***: The configuration of this artifact
							<scope>import</scope> 												<--- ***: Inheritance
						</dependency>
					</dependencies>
				</dependencyManagement>

	(12) No application.properties, because the project is NOT spring boot project, Just maven project.

	(13) Note : Spring beans created & registered into Spring Context following the order :								<--- ***
	
			Spring Beans by `@ComponentScan` 	-->   Spring Beans by `@AutoConfiguration`


-------------------------------------------------------------
Step2. Spring Boot Project Using User-defined Spring Boot Starter.
-------------------------------------------------------------

	(01) Create a Maven-based or Gradle-based Spring Boot Project.
	(02) Add the following user-defined spring boot starter into the maven/gradle configuration file `pom.xml`  or `build.gradle`  :

				<!-- User-defined Spring Boot Starter -->
				<dependency>
					<groupId>org.zerock</groupId>
					<artifactId>spring-boot-starter-userdefined</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>

	(03) Remove the following dependencies from the maven/gradle configuration file `pom.xml`  or `build.gradle`  :
			Because this spring boot project have the following *resolved* dependencies from `user-defined spring boot starter`. (***)

				<dependency>
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok</artifactId>
					<optional>true</optional>
				</dependency>

				<dependency>
					<groupId>com.oracle.database.jdbc</groupId>
					<artifactId>ojdbc8-production</artifactId>
					<type>pom</type>

					<exclusions>
						<exclusion>
							<groupId>com.oracle.database.ha</groupId>
							<artifactId>simplefan</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.oracle.database.ha</groupId>
							<artifactId>ons</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.oracle.database.jdbc</groupId>
							<artifactId>rsi</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.oracle.database.xml</groupId>
							<artifactId>xdb</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.oracle.database.xml</groupId>
							<artifactId>xmlparserv2</artifactId>
						</exclusion>
					</exclusions>
				</dependency>

	(04) Using all beans loaded from user-defined spring boot starter.






