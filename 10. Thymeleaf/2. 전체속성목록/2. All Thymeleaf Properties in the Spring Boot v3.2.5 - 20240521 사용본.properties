==========================================================
 All Thymeleaf Properties in the Spring Boot v3.2.5 ( 2024.05.21 )
==========================================================

----------------------------
(1) ${ EL expression with EL Built-in objects } are used with Thymeleaf Attributes : ex) th:text="${EL expression}"
		● Shared attribute : ${ sharedAttributeName }
		● Built-in objects  : 
				1) ${thymeleafRequestContext}	=> type: org.springframework.web.servlet.support.RequestContext
				2) ${application}							=> type: org.thymeleaf.context.WebEngineContext$ApplicationAttributeMap
				3) ${session}								=> type: org.thymeleaf.context.WebEngineContext$SessionAttributeMap
				4) ${param}									=> type: org.thymeleaf.context.WebEngineContext$RequestParameterMap
		● String Literal     : ${ 'String Literal' }, ${ 'String1' + 'String2' }, ${ 'String3' } + 'String4' 
		● Boolean Literal  : ${ true }, ${ false }
		● Number Literal  : ${ 100 }, ${ 200.0 }
		● Using operators: ${ 100 + 200 }, ${ 100 - 200 }, ${ 100 * 200 }, ${ 100 / 200 }, ${ 100 % 200 == 0 }, ${ 100 < 200 }

(2) @{ Link URL with Query String } => @{ url (param1=value1, param2=value2, ...) }

(3) [[ ${ EL expression } ]] : Inner Text or HTML content regardless of a tag.

(4) *Important Warning:
		- If thymeleaf attributes are used, the value of thymeleaf attribute could *Not be a Literal.
		- Instead, the value of thymeleaf attribute should be with *EL expression ( ${value} )

		- Please refer to : quickstart-ch06-thymeleaf > src/main/resources/templates/hello.html
		- Please send request with : https://localhost/hello
----------------------------

001. th:abbr
002. th:accept
003. th: accept-charset
004. th:accesskey

005. th:action**
		● Usage:			Used in the tags with *action property.
		● Example:		<form th:action="${ '/board/update' }">		=> <form action="/board/update">

006. th:align*
		Example:	<body th:align="center"> </body>			=> <body align="center"> </body>
					    <table th:align="center"> </table>		=> <table align="center"> </table>

007. th:alt
008. th:alt-title
009. th:archive
010. th:assert
011. th:async
012. th:attr
013. th:attrappend
014. th:attrprepend
015. th:audio
016. th:audiocomplete
017. th:autofocus
018. th:autoplay
019. th:axis
020. th:background
021. th:bgcolor
022. th:border
023. th:case

024. th:cellpadding*
		Example: <table th:cellpadding="0"> </table>		=> <table cellpadding="0"> </table>

025. th:cellspacing*
		Example: <table th:cellspacing="0"> </table>		=> <table cellspacing="0"> </table>
		
026. th:challenge
027. th:charset
028. th:checked
029. th:cite
030. th:class
031. th:classappend
032. th:classid
033. th:codebase
034. th:codetype
035. th:cols
036. th:colspan
037. th:compact
038. th:content
039. th:contenteditable
040. th:contextmenu
041. th:controls
042. th:data
043. th:datetime
044. th:declare
045. th:default
046. th:defer
047. th:dir
048. th:disabled
049. th:draggable
050. th:dropzone

051. th:each***
		● Refs : https://medium.com/@nickota/write-for-loop-using-thymeleaf-2932145ff94c
					: https://chatgpt.com/share/ed786db4-a48d-4f15-bee0-5676e79642c2
					: https://chatgpt.com/share/595041e5-fd94-4663-90c2-70930b9e55d5

		● Usage:			th:each="EL Variable : Collection"

		● Example1:	
							- Request Scope: request.setAttribute("_PAGE_", Page<Board>);

							- In the thymeleaf:
								<tr th:each="board : ${ _PAGE_.content }">		=> 	<tr>
					                <td th:text="${ board.seq }">										<td>100</td>
					                <td th:text="${ board.title }">										<td>Title</td>
					                <td th:text="${ board.writer }">									<td>Yoseph</td>
					                <td th:text="${ board.createDate }">							<td>2024-05-18 18:08:37.080302</td>
					                <td th:text="${ board.updateDate }">							<td></td>
					                <td th:text="${ board.cnt }">											<td>0</td>
					            </tr>																				</tr>

		● *Example2: for loop with `th:each` property :

				<select name="foo">
					<option th:each="i : ${#numbers.sequence(1, 10)}" th:value="${i}" th:text="'No.' + ${i}">Num</option>
				</select>

		● *Example3: State Attributes: 

				<ul>
					  <li th:each="item, iterStat : ${items}">
					    	<span th:text="${iterStat.index}">0</span>: <span th:text="${item}">Item</span>
					  </li>
				</ul>

		● * All State Attributes are the following if state attribute named 'state' :
				- state.index : 0부터 시작하는 현재 반복의 인덱스.
				- state.count : 1부터 시작하는 현재 반복의 인덱스.
				- state.size : 반복 중인 전체 항목의 수.
				- state.current : 현재 반복 중인 항목.
				- state.even : 현재 인덱스가 짝수인지 여부를 나타내는 불리언 값.
				- state.odd : 현재 인덱스가 홀수인지 여부를 나타내는 불리언 값.
				- state.first : 첫 번째 반복인지 여부를 나타내는 불리언 값.
				- state.last : 마지막 반복인지 여부를 나타내는 불리언 값.

052. th:enctype
053. th:for
054. th:form
055. th:formation
056. th:formenctype
057. th:formmethod
058. th:formnovalidate
059. th:formtarget
060. th:fragment
061. th:frame
062. th:frameborder
063. th:headers
064. th:height
065. th:hidden

066. th:href**
		● Usage: 		th:href="@{ URL (param1=value1, param2=value2,  ...) }"
									=> href="URL?param1=value1&param2=value2 ..."
		● Example:
								<a th:href="@{ URL (param1=value1, param2=value2) }" th:text="linkName"></a>
									=> <a href="URL?param1=value1&param2=value2">linkName</a>

067. th:hreflang
068. th:hspace
069. th:http-equiv
070. th:icon
071. th:id

072. th:if**
		● Refs : https://chatgpt.com/share/e03f1846-2354-4488-b2a7-20578fc681c4

		● Example:

			    <div th:if="${isAdmin}">
			        <p>Welcome, Admin!</p>
			    </div>

			    <p th:if="${not isAdmin}">Welcome, User!</p>

073. th:include
074. th:inline
075. th:insert
076. th:ismap
077. th:keytype
078. th:kind
079. th:label
080. th:lang
081. th:lang-xmlllang
082. th:list
083. th:longdesc

084. th:loop**
		● Refs : https://medium.com/@nickota/write-for-loop-using-thymeleaf-2932145ff94c

		● Please refer to the "051. th:each".
		● "th:loop" is similar to the "th:each".

085. th:low
086. th:manifest
087. th:marginheight
088. th:marginwidth
089. th:max
090. th:maxlength
091. th:media

092. th:method**
		● Usage:			Used in the tags with `method` property.
		● Example:		<form th:method="POST">		=> <form method="POST">

093. th:min
094. th:multiple

095. th:name*
		● Usage:			Used in the tags with `name` property.
		● Example:		<input type="text" th:name="id" size="25" required>		=> <input type="text" name="id" size="25" required>

096. th:novalidate
097. th:nowrap
098. th:object
099. th:onabort
100. th:onafterprint
101. th:onbeforeprint
102. th:onbeforeunload
103. th:onblur
104. th:oncanplay
105. th:oncanplaythrough
106. th:onchange
107. th:onclick
108. th:oncontextmenu
109. th:ondblclick
110. th:ondrag
111. th:ondragend
112. th:ondragenter
113. th:ondragleave
114. th:ondragstart
115. th:ondrop
116. th:ondurationchanged
117. th:onemptied
118. th:onended
119. th:onerror
120. th:onfocus
121. th:onformchange
122. th:onforminput
123. th:onhashchange
124. th:oninput
125. th:oninvalid
126. th:onkeydown
127. th:onkeypress
128. th:onkeyup
129. th:onload
130. th:onloadeddata
131. th:onloadedmetadata
132. th:onloadstart
133. th:onmessage
134. th:onmousedown
135. th:onmousemove
136. th:onmouseout
137. th:onmouseover
138. th:onmouseup
139. th:onmousewheel
140. th:onoffline
141. th:ononline
142. th:onpause
143. th:onplay
144. th:onplaying
145. th:onpopstate
146. th:onprogress
147. th:onratechange
148. th:onreadystatechange
149. th:onredo
150. th:onreset
151. th:onresize
152. th:onscroll
153. th:onseeked
154. th:onseeking
155. th:onselect
156. th:onstalled
157. th:onstorage
158. th:onsubmit
159. th:onsuspend
160. th:ontimeupdate
161. th:onundo
162. th:onunload
163. th:onvolumechange
164. th:onwaiting
165. th:open
166. th:optimum
167. th:pattern
168. th:placeholder
169. th:poster
170. th:preload
171. th:pubdate
172. th:radiogroup
173. th:readonly
174. th:ref
175. th:rel
176. th:remove
177. th:replace
178. th:required
179. th:rev
180. th:reversed
181. th:rows
182. th:rowspan
183. th:rules
184. th:sandbox
185. th:scheme
186. th:scope
187. th:scoped
188. th:scrolling
189. th:seamless
190. th:selected
191. th:size
192. th:sizes
193. th:span
194. th:spellcheck
195. th:src
196. th:srclang
197. th:standby
198. th:start
199. th:step
200. th:style
201. th:styleappend
202. th:substituteby
203. th:summary
204. th:switch
205. th:tabindex
206. th:target

207. th:text**
		● Refs:	https://chatgpt.com/share/3f5246ce-2a81-45ea-89e1-6031a8332276

		● Usage:			<tag th:text="text"></tag>									 	=> 	<tag>text</tag>
		
		● Example:	
								<h3 th:text="${greeting}"></h3>							=> <h3>${greeting}</h3>, 							(1) EL expression OK
								<h3 th:text="${greeting} + ', Really ?'"></h3>		=> <h3>${greeting} + ', Really ?'</h3>,		(2) String concatenation OK
								<h3 th:text="I am the God in my world"></h3>	=> <h3>I am the God in my world</h3>, 	(3) Set Literal OK

208. th:title

209. th:type
		● Refs:	https://chatgpt.com/share/8f6db73e-6971-4d4d-9e67-1b98a5155e5f

210. th:unless
211. th:usemap
212. th:utext

213. th:value**
		● Usage:			used in the tags with `value` property.
		● Example:		<input type="submit" th:value="value">		=> <input type="submit" value="value">

214. th:valuetype
215. th:vspace
216. th:width
217. th:with
218. th:wrap
219. th:xmlbase
220. th:xmllang
221. th:xmlspace



